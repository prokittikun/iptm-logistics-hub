// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model User {
    u_id        Int      @id @default(autoincrement())
    u_username  String
    u_password  String
    u_name      String
    u_lastname  String
    u_tel       String
    u_email     String
    u_role      Role
    u_createdAt DateTime @default(now())
    u_updatedAt DateTime @updatedAt
    Borrow      Borrow[]
}

enum Role {
    ADMIN
    USER
}

model Equipment {
    e_id              Int      @id @default(autoincrement())
    e_name            String
    e_model           String
    e_description     String
    e_color           String
    e_image           String
    e_number          String
    e_shipping_number String
    e_date_received   DateTime
    e_available_qty   Int
    e_createdAt       DateTime @default(now())
    e_updatedAt       DateTime @updatedAt
    Borrow            Borrow[]
}

model Borrow {
    b_id           Int       @id @default(autoincrement())
    b_user         User      @relation(fields: [b_user_id], references: [u_id])
    b_user_id      Int
    b_equipment    Equipment @relation(fields: [b_equipment_id], references: [e_id])
    b_equipment_id Int
    b_date_borrow  DateTime
    b_date_return  DateTime
    e_status       Status
    is_damage      Boolean
    b_createdAt    DateTime  @default(now())
    b_updatedAt    DateTime  @updatedAt
}

enum Status {
    BORROW
    RETURN
}